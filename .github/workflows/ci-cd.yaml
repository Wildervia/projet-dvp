name: CI/CD Pipeline

on:
  push:
    branches:
      - main  
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -t calculator:latest .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker tag calculator:latest ${{ secrets.DOCKER_USERNAME }}/calculator:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/calculator:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to server
        env:
          DOCKER_HOST: ${{ secrets.DOCKER_HOST }}
          DOCKER_TLS_VERIFY: 1
          DOCKER_CERT_PATH: ${{ secrets.DOCKER_CERT_PATH }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/calculator:latest
            docker stop calculator || true
            docker rm calculator || true
            docker run -d -p 80:80 --name calculator ${{ secrets.DOCKER_USERNAME }}/calculator:latest
          EOF
